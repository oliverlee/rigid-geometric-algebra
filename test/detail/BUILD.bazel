load("@rules_cc//cc:defs.bzl", "cc_test")

package(default_visibility = ["//:__subpackages__"])

cc_test(
    name = "are_dimensions_unique_test",
    size = "small",
    srcs = ["are_dimensions_unique_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "contract_test",
    size = "small",
    srcs = ["contract_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_binary(
    name = "contract_handler_test",
    srcs = ["contract_handler_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

sh_test(
    name = "contract_handler_failure_test",
    size = "small",
    srcs = ["contract_handler_failure_test.bash"],
    args = [":contract_handler_test"],
    data = [":contract_handler_test"],
)

cc_binary(
    name = "copy_ref_qual_test",
    srcs = ["copy_ref_qual_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "define_prioritized_overload_test",
    size = "small",
    srcs = ["define_prioritized_overload_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "decays_to_test",
    size = "small",
    srcs = ["decays_to_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "disjoint_subset_test",
    size = "small",
    srcs = ["disjoint_subset_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "has_type_test",
    size = "small",
    srcs = ["has_type_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "indices_of_test",
    size = "small",
    srcs = ["indices_of_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "is_defined_test",
    size = "small",
    srcs = ["is_defined_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "multivector_promotable_test",
    size = "small",
    srcs = ["multivector_promotable_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "priority_list_test",
    size = "small",
    srcs = ["priority_list_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "rebind_args_into_test",
    size = "small",
    srcs = ["rebind_args_into_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "size_checked_subrange_test",
    size = "small",
    srcs = ["size_checked_subrange_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "structural_bitset_test",
    size = "small",
    srcs = ["structural_bitset_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "swaps_to_sorted_dimensions_test",
    size = "small",
    srcs = ["swaps_to_sorted_dimensions_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
        "@skytest",
    ],
)

cc_test(
    name = "type_concat_test",
    size = "small",
    srcs = ["type_concat_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "type_filter_test",
    size = "small",
    srcs = ["type_filter_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "type_insert_test",
    size = "small",
    srcs = ["type_insert_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)

cc_test(
    name = "type_product_test",
    size = "small",
    srcs = ["type_product_test.cpp"],
    deps = [
        "//rigid_geometric_algebra",
    ],
)
